// SPDX-FileCopyrightText: 2024 Seal, Inc
// SPDX-License-Identifier: Apache-2.0

// Code generated by "walrus", DO NOT EDIT.

package v1

import (
	v1 "github.com/seal-io/walrus/pkg/apis/walruscore/v1"
)

// ConnectorBindingStatusApplyConfiguration represents an declarative configuration of the ConnectorBindingStatus type for use
// with apply.
type ConnectorBindingStatusApplyConfiguration struct {
	Type     *string               `json:"Type,omitempty"`
	Category *v1.ConnectorCategory `json:"Category,omitempty"`
}

// ConnectorBindingStatusApplyConfiguration constructs an declarative configuration of the ConnectorBindingStatus type for use with
// apply.
func ConnectorBindingStatus() *ConnectorBindingStatusApplyConfiguration {
	return &ConnectorBindingStatusApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ConnectorBindingStatusApplyConfiguration) WithType(value string) *ConnectorBindingStatusApplyConfiguration {
	b.Type = &value
	return b
}

// WithCategory sets the Category field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Category field is set to the value of the last call.
func (b *ConnectorBindingStatusApplyConfiguration) WithCategory(value v1.ConnectorCategory) *ConnectorBindingStatusApplyConfiguration {
	b.Category = &value
	return b
}
